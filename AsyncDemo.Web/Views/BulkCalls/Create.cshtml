@{
    ViewData["Title"] = "New Bulk API Test";
}

<div class="row justify-content-center mb-5">
    <div class="col-lg-8">
        <div class="text-center mb-5">
            <h1 class="display-4 fw-bold mb-3 text-primary">
                <i class="bi bi-lightning me-2"></i>New Bulk API Test
            </h1>
            <p class="lead">
                Configure and run multiple asynchronous API calls in parallel
            </p>
        </div>
    </div>
</div>

<div class="row g-4 justify-content-center">
    <div class="col-lg-8">
        <div class="card shadow-sm">
            <div class="card-body p-4">
                <div class="mb-3">
                    <h3 class="mb-0 d-flex align-items-center">
                        <i class="bi bi-gear me-2 text-primary"></i>
                        <span>Test Configuration</span>
                    </h3>
                    <p class="text-muted mt-2">
                        Set the parameters for your bulk API test
                    </p>
                </div>

                <form asp-action="Create" method="post" id="bulkCallForm">
                    @Html.AntiForgeryToken()

                    <div class="mb-4">
                        <label for="endpoint" class="form-label">API Endpoint URL</label>
                        <div class="input-group">
                            <span class="input-group-text"><i class="bi bi-link-45deg"></i></span>
                            <input type="url" class="form-control" id="endpoint" name="endpoint" value="@ViewBag.Endpoint"
                                required>
                        </div>
                        <div class="form-text">The API endpoint to call multiple times</div>
                    </div>

                    <div class="row mb-4">
                        <div class="col-md-6">
                            <label for="maxThreads" class="form-label">Max Concurrent Threads</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-cpu"></i></span>
                                <input type="number" class="form-control" id="maxThreads" name="maxThreads" min="1" max="20"
                                    value="@ViewBag.MaxThreads" required>
                            </div>
                            <div class="form-text">Number of concurrent API calls</div>
                        </div>

                        <div class="col-md-6">
                            <label for="iterationCount" class="form-label">Total Number of Calls</label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-repeat"></i></span>
                                <input type="number" class="form-control" id="iterationCount" name="iterationCount" min="1"
                                    max="100" value="@ViewBag.IterationCount" required>
                            </div>
                            <div class="form-text">Total number of API calls to make</div>
                        </div>
                    </div>

                    <div class="d-flex justify-content-between">
                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-left me-2"></i>Back to Results
                        </a>
                        <button type="submit" class="btn btn-primary" id="startTestBtn">
                            <i class="bi bi-play-fill me-2"></i>Start Test
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Async Stats Dashboard Container -->
<div class="row g-4 mt-4 justify-content-center">
    <div class="col-lg-8">
        <div id="async-stats-container"></div>
    </div>
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            // Show a notification that the page is ready
            if (window.asyncStats) {
                const readyOpId = window.asyncStats.startOperation('Page Load');
                window.asyncStats.completeOperation(readyOpId, true, 'New Test Page Loaded Successfully');
            }

            // Add submit handler for the form
            $('#bulkCallForm').on('submit', function (e) {
                if (window.asyncStats) {
                    const maxThreads = $('#maxThreads').val();
                    const iterationCount = $('#iterationCount').val();

                    const opId = window.asyncStats.startOperation('Bulk API Test');

                    // Show an info toast about starting the operation
                    toastr.info(`Starting bulk test with ${iterationCount} calls using ${maxThreads} threads...`,
                        'Bulk API Test',
                        { timeOut: 0, extendedTimeOut: 0, progressBar: true });

                    // We'll let the form submission proceed normally
                    // and the server will handle the actual API calls
                }
            });
        });
    </script>
}
